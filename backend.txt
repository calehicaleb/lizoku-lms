# Lizoku LMS Backend API Specification (Mock)
# This file documents the API endpoints simulated in `services/api.ts`.

---
## Authentication
---

### POST /api/auth/login
- **Description:** Authenticates a user and returns their profile.
- **Request Body:**
  ```json
  {
    "email": "string",
    "password": "string"
  }
  ```
- **Response:** `User` object or `null`.

---
## Admin
---

### GET /api/admin/stats
- **Description:** Retrieves key statistics for the admin dashboard.
- **Response:** `StatCardData[]`

### GET /api/users
- **Description:** Retrieves all users in the system.
- **Response:** `User[]`

### GET /api/users/instructors
- **Description:** Retrieves all users with the role of 'instructor'.
- **Response:** `User[]`

### POST /api/users
- **Description:** Creates a new user.
- **Request Body:** `Pick<User, 'name' | 'email' | 'role' | 'status'>`
- **Response:** The newly created `User` object.

### PUT /api/users/:userId
- **Description:** Updates an existing user's details (name, email, role, status, avatarUrl).
- **Request Body:** `Partial<Pick<User, 'name' | 'email' | 'role' | 'status' | 'avatarUrl'>>`
- **Response:** The updated `User` object or `null`.

### POST /api/users/:userId/change-password
- **Description:** Changes a user's password.
- **Request Body:**
  ```json
  {
    "currentPassword": "string",
    "newPassword": "string"
  }
  ```
- **Response:** `{ success: boolean, message: string }`

### DELETE /api/users/:userId
- **Description:** Deletes a user.
- **Response:** `{ success: boolean }`

### GET /api/users/recent?limit={number}
- **Description:** Retrieves the most recently signed-up users.
- **Query Params:**
  - `limit`: (Optional) Number of users to return. Defaults to 5.
- **Response:** `User[]`

### GET /api/departments
- **Description:** Retrieves all academic departments.
- **Response:** `Department[]`

### POST /api/departments
- **Description:** Creates a new department.
- **Request Body:** `Pick<Department, 'name' | 'head'>`
- **Response:** The newly created `Department` object.

### PUT /api/departments/:deptId
- **Description:** Updates an existing department.
- **Request Body:** `Pick<Department, 'name' | 'head'>`
- **Response:** The updated `Department` object or `null`.

### DELETE /api/departments/:deptId
- **Description:** Deletes a department.
- **Response:** `{ success: boolean }`


### GET /api/programs
- **Description:** Retrieves all academic programs.
- **Response:** `Program[]`

### POST /api/programs
- **Description:** Creates a new program.
- **Request Body:** `Pick<Program, 'name' | 'departmentId' | 'duration'>`
- **Response:** The newly created `Program` object.

### PUT /api/programs/:programId
- **Description:** Updates an existing program.
- **Request Body:** `Pick<Program, 'name' | 'departmentId' | 'duration'>`
- **Response:** The updated `Program` object or `null`.

### DELETE /api/programs/:programId
- **Description:** Deletes a program.
- **Response:** `{ success: boolean }`


### GET /api/semesters
- **Description:** Retrieves all academic semesters.
- **Response:** `Semester[]`

### POST /api/semesters
- **Description:** Creates a new semester.
- **Request Body:** `Pick<Semester, 'name' | 'startDate' | 'endDate'>`
- **Response:** The newly created `Semester` object.

### PUT /api/semesters/:semesterId
- **Description:** Updates an existing semester.
- **Request Body:** `Pick<Semester, 'name' | 'startDate' | 'endDate'>`
- **Response:** The updated `Semester` object or `null`.

### DELETE /api/semesters/:semesterId
- **Description:** Deletes a semester.
- **Response:** `{ success: boolean }`


### GET /api/courses
- **Description:** Retrieves all courses in the system.
- **Response:** `Course[]`

### POST /api/courses
- **Description:** Creates a new course.
- **Request Body:** `Pick<Course, 'title' | 'description' | 'departmentId' | 'instructorId'>`
- **Response:** The newly created `Course` object.

### PUT /api/courses/:courseId
- **Description:** Updates an existing course by its ID.
- **Request Body:** `Pick<Course, 'title' | 'description' | 'departmentId' | 'instructorId'>`
- **Response:** The updated `Course` object or `null` if not found.

### PUT /api/courses/:courseId/modules
- **Description:** Updates the entire module structure for a course. Used for saving quiz question selections.
- **Request Body:** `Module[]`
- **Response:** The updated `Course` object.

### DELETE /api/courses/:courseId
- **Description:** Deletes a course by its ID.
- **Response:** `{ success: boolean }`

### GET /api/announcements
- **Description:** Retrieves all site announcements.
- **Response:** `Announcement[]`

### GET /api/announcements/latest
- **Description:** Retrieves the single most recent announcement.
- **Response:** `Announcement` object or `null`.

### POST /api/announcements
- **Description:** Creates a new announcement. Also generates notifications for all users.
- **Request Body:** `Pick<Announcement, 'title' | 'content' | 'author'>`
- **Response:** The newly created `Announcement` object.

### PUT /api/announcements/:announcementId
- **Description:** Updates an existing announcement.
- **Request Body:** `Pick<Announcement, 'title' | 'content'>`
- **Response:** The updated `Announcement` object or `null`.

### DELETE /api/announcements/:announcementId
- **Description:** Deletes an announcement.
- **Response:** `{ success: boolean }`

### GET /api/communications
- **Description:** Retrieves all sent communications, sorted by most recent.
- **Response:** `Communication[]`

### POST /api/communications
- **Description:** Sends a new communication. Also generates notifications for recipients.
- **Request Body:** `Omit<Communication, 'id' | 'sentAt'>`
- **Response:** The newly created `Communication` object.

### GET /api/admin/questions
- **Description:** Retrieves all questions from all instructors in the system.
- **Response:** `(Question & { instructorName: string })[]`

### GET /api/admin/activity-logs
- **Description:** Retrieves a filterable list of all significant user activities.
- **Response:** `ActivityLog[]`

### GET /api/admin/sessions
- **Description:** Retrieves all active user sessions.
- **Response:** `UserSession[]`

### DELETE /api/admin/sessions/:sessionId
- **Description:** Terminates a user session by its ID.
- **Response:** `{ success: boolean }`

### GET /api/admin/security-settings
- **Description:** Retrieves the current platform security settings.
- **Response:** `SecuritySettings` object.

### PUT /api/admin/security-settings
- **Description:** Updates the platform security settings.
- **Request Body:** `SecuritySettings` object.
- **Response:** The updated `SecuritySettings` object.

### GET /api/admin/reports/enrollments
- **Description:** Retrieves a report of all student enrollments.
- **Response:** `Array<{ studentName, courseTitle, programName, programId, enrollmentDate }>`

### GET /api/admin/reports/course-completion
- **Description:** Retrieves a report on course completion rates.
- **Response:** `Array<{ courseTitle, completionRate }>`

### GET /api/admin/reports/instructor-activity
- **Description:** Retrieves a report on instructor activity.
- **Response:** `Array<{ instructorId, instructorName, coursesTaught, totalStudents }>`

### GET /api/admin/reports/grade-distribution
- **Description:** Retrieves a report on the distribution of grades across the platform.
- **Response:** `Array<{ range, count }>`

### GET /api/admin/examinations
- **Description:** Retrieves all examinations from all instructors in the system.
- **Response:** `(Examination & { instructorName: string })[]`

### GET /api/admin/certificate-settings
- **Description:** Retrieves the current platform-wide certificate settings.
- **Response:** `CertificateSettings` object.

### PUT /api/admin/certificate-settings
- **Description:** Updates the platform certificate settings.
- **Request Body:** `CertificateSettings` object.
- **Response:** The updated `CertificateSettings` object.

### GET /api/admin/certificate-requests
- **Description:** Retrieves all pending certificate requests.
- **Response:** `CertificateRequest[]`

### POST /api/admin/certificate-requests/:requestId/approve
- **Description:** Approves a certificate request.
- **Response:** `{ success: boolean }`

### POST /api/admin/certificate-requests/:requestId/deny
- **Description:** Denies a certificate request.
- **Response:** `{ success: boolean }`


---
## Instructor
---

### GET /api/instructor/stats
- **Description:** Retrieves key statistics for the logged-in instructor's dashboard.
- **Response:** `StatCardData[]`

### GET /api/instructor/courses
- **Description:** Retrieves all courses assigned to the logged-in instructor.
- **Response:** `Course[]` (merged with summary data)

### GET /api/instructor/rubrics
- **Description:** Retrieves all rubrics for the logged-in instructor.
- **Response:** `Rubric[]`

### POST /api/instructor/rubrics
- **Description:** Creates a new rubric.
- **Request Body:** `Omit<Rubric, 'id'>`
- **Response:** The newly created `Rubric` object.

### PUT /api/instructor/rubrics/:rubricId
- **Description:** Updates an existing rubric.
- **Request Body:** `Partial<Omit<Rubric, 'id' | 'instructorId'>>`
- **Response:** The updated `Rubric` object or `null`.

### DELETE /api/instructor/rubrics/:rubricId
- **Description:** Deletes a rubric.
- **Response:** `{ success: boolean }`

### GET /api/grades/course/:courseId
- **Description:** Retrieves all students and their grades for a specific course.
- **Response:** 
  ```json
  {
    "gradableItems": "ContentItem[]",
    "studentGrades": "object[]" 
  }
  ```

### GET /api/submissions/:submissionId
- **Description:** Retrieves the details of a specific submission (quiz or assignment) for manual grading.
- **Response:** 
  ```json
  {
    "submission": "Submission", 
    "questions": "Question[] | null",
    "rubric": "Rubric | null"
  }
  ```

### POST /api/submissions/grade-manual
- **Description:** Calculates and saves the final score for a manually reviewed submission. Generates a notification for the student.
- **Request Body:**
  ```json
  {
    "submissionId": "string",
    "manualScores": "Record<string, number>" 
  }
  ```
- **Response:** The final, updated `Grade` object.

### PUT /api/grades
- **Description:** Creates or updates a specific grade for a student. Generates a notification for the student.
- **Request Body:**
  ```json
  {
    "studentId": "string",
    "courseId": "string",
    "contentItemId": "string",
    "score": "number | null"
  }
  ```
- **Response:** The updated `Grade` object.

### GET /api/questions?instructorId={id}
- **Description:** Retrieves all questions for a specific instructor.
- **Response:** `Question[]` (Array of question objects. `Question` is a discriminated union based on the `type` property, including `multiple-choice`, `true-false`, `short-answer`, `multiple-select`, and `fill-in-the-blank`.)

### POST /api/questions/batch
- **Description:** Retrieves a specific list of questions by their IDs.
- **Request Body:** `string[]` (Array of question IDs)
- **Response:** `Question[]`

### POST /api/questions
- **Description:** Creates a new question.
- **Request Body:** `Omit<Question, 'id'>` (A question object from the discriminated union.)
- **Response:** The newly created `Question` object.

### PUT /api/questions/:questionId
- **Description:** Updates an existing question.
- **Request Body:** `Partial<Omit<Question, 'id' | 'instructorId'>>`
- **Response:** The updated `Question` object or `null`.

### DELETE /api/questions/:questionId
- **Description:** Deletes a question.
- **Response:** `{ success: boolean }`

### GET /api/instructor/examinations?instructorId={id}
- **Description:** Retrieves all examinations for a specific instructor.
- **Response:** `Examination[]`

### POST /api/instructor/examinations
- **Description:** Creates a new examination.
- **Request Body:** `Omit<Examination, 'id' | 'status' | 'courseTitle'>`
- **Response:** The newly created `Examination` object.

### PUT /api/instructor/examinations/:examId
- **Description:** Updates an existing examination.
- **Request Body:** `Partial<Omit<Examination, 'id' | 'instructorId'>>`
- **Response:** The updated `Examination` object or `null`.

### DELETE /api/instructor/examinations/:examId
- **Description:** Deletes an examination.
- **Response:** `{ success: boolean }`

---
## Student
---

### GET /api/student/program
- **Description:** Retrieves the academic program details for the logged-in student.
- **Response:** `StudentProgramDetails` object or `null`.

### GET /api/student/transcript
- **Description:** Retrieves a complete academic transcript for the logged-in student.
- **Response:** `StudentTranscript` object or `null`.

### GET /api/student/courses
- **Description:** Retrieves all courses the logged-in student is enrolled in.
- **Response:** `CourseSummary[]`

### GET /api/student/overdue-items?userId={id}
- **Description:** Retrieves all overdue assignments and quizzes for the student's dashboard.
- **Response:** `OverdueItem[]`

### GET /api/student/upcoming-deadlines?userId={id}
- **Description:** Retrieves all upcoming deadlines for the student's dashboard.
- **Response:** `UpcomingDeadline[]`

### GET /api/student/recent-activity?userId={id}
- **Description:** Retrieves a feed of recent events for the student's dashboard.
- **Response:** `RecentActivity[]`

### GET /api/student/submissions?studentId={id}&contentItemId={id}
- **Description:** Retrieves all of a student's past quiz submissions for a specific content item.
- **Response:** `QuizSubmission[]`

### GET /api/student/assignment-submission?studentId={id}&contentItemId={id}
- **Description:** Retrieves a student's file submission for a specific assignment.
- **Response:** `AssignmentSubmission` or `null`.

### GET /api/grades/student/:studentId/course/:courseId
- **Description:** Retrieves a specific student's grades for a given course.
- **Response:** 
  ```json
  [
    {
      "contentItemTitle": "string",
      "score": "number | null"
    },
    ...
  ]
  ```

### POST /api/quizzes/submit
- **Description:** Submits a student's quiz answers for grading. Generates a notification for the student if grading is complete.
- **Request Body:**
  ```json
  {
    "studentId": "string",
    "courseId": "string",
    "contentItemId": "string",
    "answers": "Record<string, string | number | boolean | number[]>"
  }
  ```
- **Response:** The resulting `Grade` object, which may have a status of 'graded' or 'pending review'.

### POST /api/assignments/submit
- **Description:** Submits a student's file for an assignment. Creates a grade in 'pending review' status and notifies the instructor.
- **Request Body:**
  ```json
  {
    "studentId": "string",
    "courseId": "string",
    "contentItemId": "string",
    "file": "{ name: string, size: number }"
  }
  ```
- **Response:** The newly created `AssignmentSubmission` object.

### GET /api/student/messages
- **Description:** Retrieves all message threads for the logged-in student.
- **Response:** `MessageThread[]`

### GET /api/student/messages/:threadId
- **Description:** Retrieves the details and all messages for a specific thread.
- **Response:** `MessageThread` object (with `messages` property populated) or `null`.

### POST /api/student/messages/:threadId
- **Description:** Sends a new message (reply) in a thread. Generates a notification for other participants.
- **Request Body:**
  ```json
  {
    "content": "string",
    "author": "User"
  }
  ```
- **Response:** The newly created `Message` object.

### POST /api/messages/threads
- **Description:** Creates a new message thread with initial participants, subject, and message.
- **Request Body:**
  ```json
  {
    "participants": "Pick<User, 'id' | 'name' | 'avatarUrl'>[]",
    "subject": "string",
    "content": "string",
    "author": "User"
  }
  ```
- **Response:** The newly created `MessageThread` object.

### GET /api/student/certificates
- **Description:** Retrieves all earned certificates for the logged-in student.
- **Response:** `Certificate[]`

### GET /api/student/achievements
- **Description:** Retrieves all available achievements and their unlocked status for the logged-in student.
- **Response:** `Achievement[]`


---
## General
---

### GET /api/content/:contentItemId
- **Description:** Retrieves the detailed HTML content for a specific content item (lesson, resource, assignment).
# Note: The HTML content returned by this endpoint for lessons now uses a more structured format with custom classes for enhanced styling (e.g., 'lesson-section-header').
- **Response:** `ContentItemDetails` object or `null`.

### GET /api/notifications?userId={id}
- **Description:** Retrieves all notifications for a specific user.
- **Response:** `Notification[]`

### POST /api/notifications/:notificationId/read
- **Description:** Marks a single notification as read.
- **Response:** `{ success: boolean }`

### POST /api/notifications/read-all?userId={id}
- **Description:** Marks all of a user's notifications as read.
- **Response:** `{ success: boolean }`

### GET /api/institution/settings
- **Description:** Retrieves the current institution settings (name, logo, etc.).
- **Response:** `InstitutionSettings` object.

### PUT /api/institution/settings
- **Description:** Updates the institution settings.
- **Request Body:** `InstitutionSettings` object.
- **Response:** The updated `InstitutionSettings` object.

### GET /api/courses/:courseId
- **Description:** Retrieves detailed information for a specific course.
- **Response:** `Course` object or `null`. The `ContentItem` objects within the response may now contain an `instructions` string property for quizzes and assignments.

### GET /api/calendar/events
- **Description:** Retrieves all calendar events relevant to the user.
- **Response:** `CalendarEvent[]`

### GET /api/discussions/:discussionId/threads
- **Description:** Retrieves all threads for a specific discussion content item.
- **Response:** `DiscussionThread[]` (with posts included)

### POST /api/discussions/threads/:threadId/read
- **Description:** Marks a discussion thread as read.
- **Response:** `{ success: boolean }`

### POST /api/discussions/threads
- **Description:** Creates a new discussion thread.
- **Request Body:**
  ```json
  {
    "discussionId": "string",
    "title": "string",
    "content": "string", // Content of the first post
    "author": "User"
  }
  ```
- **Response:** The newly created `DiscussionThread` object (with the first post).

### POST /api/discussions/posts
- **Description:** Creates a new post (reply) in a thread.
- **Request Body:**
  ```json
  {
    "threadId": "string",
    "content": "string",
    "author": "User"
  }
  ```
- **Response:** The newly created `DiscussionPost` object.